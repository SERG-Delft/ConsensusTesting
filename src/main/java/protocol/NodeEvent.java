// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/ripple.proto

package protocol;

/**
 * Protobuf enum {@code protocol.NodeEvent}
 */
public enum NodeEvent
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * closing a ledger because its close time has come
   * </pre>
   *
   * <code>neCLOSING_LEDGER = 1;</code>
   */
  neCLOSING_LEDGER(1),
  /**
   * <pre>
   * accepting a closed ledger, we have finished computing it
   * </pre>
   *
   * <code>neACCEPTED_LEDGER = 2;</code>
   */
  neACCEPTED_LEDGER(2),
  /**
   * <pre>
   * changing due to network consensus
   * </pre>
   *
   * <code>neSWITCHED_LEDGER = 3;</code>
   */
  neSWITCHED_LEDGER(3),
  /**
   * <code>neLOST_SYNC = 4;</code>
   */
  neLOST_SYNC(4),
  ;

  /**
   * <pre>
   * closing a ledger because its close time has come
   * </pre>
   *
   * <code>neCLOSING_LEDGER = 1;</code>
   */
  public static final int neCLOSING_LEDGER_VALUE = 1;
  /**
   * <pre>
   * accepting a closed ledger, we have finished computing it
   * </pre>
   *
   * <code>neACCEPTED_LEDGER = 2;</code>
   */
  public static final int neACCEPTED_LEDGER_VALUE = 2;
  /**
   * <pre>
   * changing due to network consensus
   * </pre>
   *
   * <code>neSWITCHED_LEDGER = 3;</code>
   */
  public static final int neSWITCHED_LEDGER_VALUE = 3;
  /**
   * <code>neLOST_SYNC = 4;</code>
   */
  public static final int neLOST_SYNC_VALUE = 4;


  public final int getNumber() {
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static NodeEvent valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static NodeEvent forNumber(int value) {
    switch (value) {
      case 1: return neCLOSING_LEDGER;
      case 2: return neACCEPTED_LEDGER;
      case 3: return neSWITCHED_LEDGER;
      case 4: return neLOST_SYNC;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<NodeEvent>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      NodeEvent> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<NodeEvent>() {
          public NodeEvent findValueByNumber(int number) {
            return NodeEvent.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return protocol.Ripple.getDescriptor().getEnumTypes().get(3);
  }

  private static final NodeEvent[] VALUES = values();

  public static NodeEvent valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private NodeEvent(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:protocol.NodeEvent)
}

